<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oneplatform.system.dao.mapper.ResourceEntityMapper" >
  <resultMap id="BaseResultMap" type="com.oneplatform.system.dao.entity.ResourceEntity" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="resource" property="resource" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="is_default" property="isDefault" jdbcType="BIT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="findAllResources" parameterType="String"  resultMap="BaseResultMap">
	  SELECT  r.*
	  FROM sys_resources r 
	  order by r.sort
   </select>
  
  <select id="findRoleResources" parameterType="map"  resultMap="BaseResultMap">
	  SELECT distinct(r.id),r.parent_id,r.module_id,r.name,r.resource,r.icon,r.sort
	  FROM sys_resources r,sys_role_resources rr where r.id=rr.resource_id and rr.role_id=#{roleId}
	  <if test="type != 'all'">and r.type=#{type}</if>
	  order by r.sort
   </select>
   
   <select id="findUserResources" parameterType="map"  resultMap="BaseResultMap">
	  SELECT distinct(r.id),r.parent_id,r.module_id,r.name,r.resource,r.icon,r.sort
	  FROM sys_resources r,sys_role_resources rr where r.type=#{type} and r.id=rr.resource_id and rr.role_id IN (
	      SELECT  r.id FROM sys_role r,sys_account_roles ar where r.id=ar.role_id and ar.account_id=#{accountId}
	  )
	  order by r.sort
   </select>
   
   <select id="findLeafResources" parameterType="String"  resultMap="BaseResultMap">
	  SELECT  r.*
	  FROM sys_resources r where r.resource is not null
	  <if test="type != 'all'">and r.type=#{type}</if>
	  order by r.sort
   </select>
  
  <select id="findNotLeafResources" parameterType="String"  resultMap="BaseResultMap">
	  SELECT  r.*
	  FROM sys_resources r where r.resource is null
	  <if test="type != 'all'">and r.type=#{type}</if>
	  order by r.sort
   </select>
   
    <select id="findResources" parameterType="String"  resultMap="BaseResultMap">
	  SELECT  r.*
	  FROM sys_resources r where 1=1
	  <if test="type != 'all'">and r.type=#{type}</if>
	  order by r.sort
   </select>
   
   <select id="findAllNotMenuResources" resultMap="BaseResultMap">
	  SELECT  r.*
	  FROM sys_resources r where r.type <![CDATA[<> 'menu']]>
	  order by r.sort
   </select>
   
   <delete id="deleteAllRoleResources" parameterType="int">
     DELETE FROM sys_role_resources WHERE role_id = #{roleId}
   </delete>
   
   <delete id="deleteRoleResources" parameterType="map">
     DELETE FROM sys_role_resources WHERE role_id = #{roleId} AND resource_id IN
     <foreach collection="resourceIds" index="index" item="item" open="(" separator="," close=")">
         #{item}       
     </foreach> 
   </delete>
   
   <insert id="addRoleResources" parameterType="map">
       INSERT INTO sys_role_resources(role_id,resource_id)  
        VALUES   
        <foreach collection="resourceIds" item="item" separator=",">  
            (#{roleId},#{item})  
        </foreach>  
   </insert>
   
   <delete id="deleteResourceRalations" parameterType="int">
     DELETE FROM sys_role_resources WHERE resource_id = #{resourceId}
   </delete>
</mapper>